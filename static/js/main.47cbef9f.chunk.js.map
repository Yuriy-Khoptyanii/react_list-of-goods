{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleClickSortAlphabet","setState","ALPHABET","handleClickSortLength","LENGTH","handleClickReverce","handleClickReset","myPrepareProducts","goods","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","this","visibleReset","className","type","classNames","onClick","map","product","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,wBAA0B,WACxB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,sBAAwB,WACtB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAfjD,EAkBES,iBAAmB,WACjB,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAnBzD,4CAsBE,WACE,IAAMU,EAjDH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAczB,OAZIV,IAAaL,EAASS,UACxBO,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAG7Cd,IAAaL,EAASW,QACxBK,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAG3CjB,GACFY,EAAaM,UAGRN,EA+BqBO,CAAkBtB,EAAiBuB,KAAKrB,OAClE,EAAiCqB,KAAKrB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdoB,GAA8B,IAAfrB,GAAwBC,IAAaL,EAASM,KAEnE,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYvB,IAAaL,EAASS,WAGxCoB,QAASL,KAAKjB,wBARhB,iCAaA,wBACEoB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYvB,IAAaL,EAASW,SAGxCkB,QAASL,KAAKd,sBARhB,4BAaA,wBACEiB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAA2B,IAAfxB,IAGlByB,QAASL,KAAKZ,mBARhB,qBAaCa,GAEC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASL,KAAKX,iBAHhB,sBAUJ,6BACGC,EAAkBgB,KAAI,SAAAC,GAAO,OAC5B,oBAEE,UAAQ,OACRL,UAAU,UAHZ,SAKGK,GAJIA,eApFnB,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.47cbef9f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((g1, g2) => g1.length - g2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickSortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleClickSortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleClickReverce = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleClickReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const myPrepareProducts = getReorderedGoods(goodsFromServer, this.state);\n    const { isReversed, sortType } = this.state;\n    const visibleReset = isReversed === true || (sortType !== SortType.NONE);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-info',\n                { 'is-light': sortType !== SortType.ALPHABET },\n              )\n            }\n            onClick={this.handleClickSortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-success',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={this.handleClickSortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-warning',\n                { 'is-light': isReversed !== true },\n              )\n            }\n            onClick={this.handleClickReverce}\n          >\n            Reverse\n          </button>\n\n          {visibleReset\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleClickReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {myPrepareProducts.map(product => (\n            <li\n              key={product}\n              data-cy=\"Good\"\n              className=\"product\"\n            >\n              {product}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}